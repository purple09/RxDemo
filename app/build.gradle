apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda' //retrolambda

android {
    compileSdkVersion 23
    buildToolsVersion '24.0.0 rc2'

    defaultConfig {
        applicationId "com.purple.rxdemo"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    retrolambda {
        println("JAVA_HOME: " + System.getenv("JAVA_HOME"))
        println("JAVA7_HOME: " + System.getenv("JAVA7_HOME"))
        println("JAVA8_HOME: " + System.getenv("JAVA8_HOME"))
        javaVersion JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile rootProject.ext.lib["junit"]
    compile rootProject.ext.lib["support-v7"]
    compile rootProject.ext.lib["support-desing"]
    compile rootProject.ext.lib["rxandroid"]
    compile rootProject.ext.lib["rxjava"]
    compile rootProject.ext.lib["butterknife"]
    compile rootProject.ext.lib["okio"]
    compile rootProject.ext.lib["okhttp"]
    //fastjson的retrofit支持不好，先换成gson。
    //compile 'com.alibaba:fastjson:1.2.7'
    compile rootProject.ext.lib["retrofit"]
    compile rootProject.ext.lib["retrofit-adapter-rxjava"]
    compile rootProject.ext.lib["retrofit-converter-gson"]
    compile rootProject.ext.lib["gson"]
    compile rootProject.ext.lib["rxbinding"]
    //add leakcanary
    debugCompile rootProject.ext.lib["leakcanary-android"]
    releaseCompile rootProject.ext.lib["leakcanary-android-no-op"]
    testCompile rootProject.ext.lib["leakcanary-android-no-op"]
}
